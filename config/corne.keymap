/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DEL>;
            key-positions = <40 37>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB  &kp Q  &kp W       &kp E               &kp R           &kp T        &kp Y    &kp U               &kp I           &kp O           &kp P       &trans
&kp ESC  &kp A  &mt LGUI S  &mt LA(LEFT_ALT) D  &mt LCTRL F     &kp G        &kp H    &mt LEFT_CONTROL J  &mt LEFT_ALT K  &mt LEFT_GUI L  &lt 2 SEMI  &kp SQT
&trans   &kp Z  &kp X       &kp C               &kp V           &kp B        &kp N    &kp M               &kp COMMA       &kp DOT         &kp FSLH    &trans
                            &mo 3               &kp LEFT_SHIFT  &kp SPACE    &kp RET  &kp BACKSPACE       &mo 1
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp AMPS   &kp PRCNT        &kp HASH              &kp EXCL            &kp GRAVE    &kp TILDE  &kp KP_MULTIPLY      &kp AT                 &kp DLLR               &kp CARET     &kp PIPE
&kp ESCAPE  &kp N7     &mt LEFT_GUI N5  &mt LEFT_ALT N3       &mt LCTRL NUMBER_1  &kp N9       &kp N8     &mt LEFT_CONTROL N0  &mt LEFT_ALT NUMBER_2  &mt LEFT_GUI NUMBER_4  &kp NUMBER_6  &kp BSLH
&trans      &kp MINUS  &kp UNDER        &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET    &kp LBRC     &kp RBRC   &kp RIGHT_BRACKET    &kp RIGHT_PARENTHESIS  &kp EQUAL              &kp PLUS      &trans
                                        &mo 1                 &kp LEFT_SHIFT      &kp SPACE    &kp RET    &kp BACKSPACE        &mo 0
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &kp LC(RIGHT_ARROW)  &trans             &kp PAGE_UP       &trans                &trans          &trans          &trans        &trans     &trans  &trans
&trans  &trans  &trans               &kp LS(PAGE_DOWN)  &kp LEFT_CONTROL  &trans                &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &kp DELETE           &trans             &trans            &kp LC(LEFT_ARROW)    &trans          &trans          &trans        &trans     &trans  &trans
                                     &trans             &trans            &trans                &trans          &kp BACKSPACE   &trans
            >;
        };

        layer_4 {
            bindings = <
&kp F11     &kp F7        &kp F5             &kp F3           &kp F1                &kp F9                  &kp F8    &kp F10          &kp F2            &kp F4     &kp F6  &kp F12
&trans      &kp K_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &trans    &kp PRINTSCREEN  &kp K_CALCULATOR  &trans     &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3          &bt BT_SEL 4            &kp LEFT  &kp DOWN         &kp UP            &kp RIGHT  &trans  &trans
                                             &mo 3            &trans                &trans                  &trans    &trans           &trans
            >;
        };
    };
};
